[{"/home/ksyp/Documents/GitHub/instagram-clone/src/index.js":"1","/home/ksyp/Documents/GitHub/instagram-clone/src/App.js":"2","/home/ksyp/Documents/GitHub/instagram-clone/src/reportWebVitals.js":"3","/home/ksyp/Documents/GitHub/instagram-clone/src/Post.jsx":"4","/home/ksyp/Documents/GitHub/instagram-clone/src/firebase.jsx":"5","/home/ksyp/Documents/GitHub/instagram-clone/src/ImageUpload.jsx":"6"},{"size":500,"mtime":1610512488680,"results":"7","hashOfConfig":"8"},{"size":6604,"mtime":1611145806583,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610512488680,"results":"10","hashOfConfig":"8"},{"size":779,"mtime":1610599511044,"results":"11","hashOfConfig":"8"},{"size":671,"mtime":1610615041300,"results":"12","hashOfConfig":"8"},{"size":2274,"mtime":1611121482920,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1szvpxl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/ksyp/Documents/GitHub/instagram-clone/src/index.js",[],["31","32"],"/home/ksyp/Documents/GitHub/instagram-clone/src/App.js",["33","34"],"import React, { useState, useEffect } from 'react';\nimport InstagramEmbed from 'react-instagram-embed';\nimport Post from './Post';\nimport { db, auth } from './firebase.jsx';\nimport './App.css'\nimport Model from '@material-ui/core/Modal';\nimport { makeStyles, modalStyle } from '@material-ui/core/styles';\nimport { Button, Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\n\n\nfunction getModelStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transfrom: `translate(-${top}%,-${left})`,\n  };\n}\n\nconst useStyels = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyels();\n  const [modalStyle] = useState(getModelStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscripe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        //user has looged in....\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          //dont update username\n        } else {\n          return authUser.updateProfile({\n            displayName: username,\n          });\n        }\n      } else {\n        //user has loggrd out...\n        setUser(null);\n      }\n    })\n    return () => {\n      unsubscripe();\n    }\n  }, [user, username]);\n\n\n\n\n\n  //useEfect -> Runs a piece of code based on a specific condition\n  useEffect(() => {\n    //this is where the code runs\n    db.collection('posts').onSnapshot(snapshot => {\n      //every time a new post is added, this code fires...\n      setPosts(snapshot.docs.map(doc => doc.data()\n      ));\n    })\n  }, []);\n\n  const signUp = (event) => {\n\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username\n        })\n      })\n      .catch((error) => alert(error.message));\n    setOpen(false);\n  }\n\n\n  const signIN = (event) => {\n    event.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n    setOpenSignIn(false);\n  }\n\n\n\n\n\n\n\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth\n      .sendPasswordResetEmail(email, password)\n      .catch((error) => alert(error.message))\n    setOpenSignIn(false);\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <Model\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}>\n        <div\n          style={modalStyle}\n          className={classes.paper}>\n          <center>\n            <form className=\"app_signup\">\n              <p align=\"center\">\n                <img\n                  className=\"header_Img\"\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/%C4%B0nstagram-Profilime-Kim-Bakt%C4%B1-1.png\"\n                  alt=\"\"\n                />\n              </p>\n              <Input\n                placeholder=\"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <br />\n              <Input\n                placeholder=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <br />\n\n              <Button type=\"submit\" onClick={signIN}>Log In</Button>\n            </form>\n          </center>\n\n        </div>\n      </Model>\n      <Model\n        open={open}\n        onClose={() => setOpen(false)}>\n        <div\n          style={modalStyle}\n          className={classes.paper}>\n          <center>\n            <form className=\"app_signup\">\n              <p align=\"center\">\n                <img\n                  className=\"header_Img\"\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/%C4%B0nstagram-Profilime-Kim-Bakt%C4%B1-1.png\"\n                  alt=\"\"\n                />\n              </p>\n              <br />\n              <Input\n                type=\"text\"\n                placeholder=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <br />\n              <Input\n                placeholder=\"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <br />\n              <Input\n                placeholder=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <br />\n\n              <Button type=\"submit\" onClick={signUp}>Sign Up</Button>\n            </form>\n          </center>\n\n        </div>\n      </Model>\n      <div className=\"header\">\n        <img\n          className=\"header_Img\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/06/%C4%B0nstagram-Profilime-Kim-Bakt%C4%B1-1.png\"\n          alt=\"\"\n        />\n        {user ? (\n        <Button onClick={() => auth.signOut()}>Logout</Button>\n      ) : (\n          <div className=\"app_login\">\n            <Button onClick={() => setOpenSignIn(true)}>Log In</Button>\n            <Button onClick={() => setOpen(true)}> Sign up</Button>\n          </div>\n        )}\n      </div>\n      \n      <InstagramEmbed\n        url='https://www.instagram.com/p/B_uf9dmAGPw/'\n        maxWidth={320}\n        hideCaption={false}\n        containerTagName='div'\n        protocol=''\n        injectScript\n        onLoading={() => {}}\n        onSuccess={() => {}}\n        onAfterRender={() => {}}\n        onFailure={() => {}}\n      />\n\n      \n      <div className=\"posts\">\n      {\n        posts.map(post => (\n          <Post username={post.username}\n                key={post.id}\n                postId={post.id}\n            caption={post.caption}\n            imgUrl={post.imgUrl}\n          />\n        ))\n      }\n\n      </div>\n\n\n      {user?.displayName?(\n        <ImageUpload username={user.displayName} />\n      ) : (\n          <h3>You need to Login to upload</h3>\n        )}\n    </div>\n    \n  );\n}\n\nexport default App;\n","/home/ksyp/Documents/GitHub/instagram-clone/src/reportWebVitals.js",[],"/home/ksyp/Documents/GitHub/instagram-clone/src/Post.jsx",["35"],"import React from 'react';\nimport { } from \"./Post.css\";\nimport Avatar from '@material-ui/core/Avatar';\n\nfunction Post({username, caption, imgUrl}) {\n    return (\n        <div className=\"post\">\n            <div className=\"post_header\">\n                <Avatar\n                    className=\"post_avatar\"\n                    alt=\"S\"\n                    src={imgUrl} />\n                <h3>{username}</h3>\n            </div>\n\n            {/*header contains avatar nd username */}\n            <img className=\"Post_img\" src={imgUrl} />\n            {/*Image section */}\n            <h4 className=\"post_text\">\n                <strong>{username}</strong>\n                {caption}</h4>\n            {/*username nd cation implement section*/}\n\n        </div>\n    )\n}\n\nexport default Post\n","/home/ksyp/Documents/GitHub/instagram-clone/src/firebase.jsx",["36"],"import React from 'react';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n        apiKey: \"AIzaSyCt5wtduOuuvIKpn5_mqf0TxEZK30sLrKw\",\n        authDomain: \"instagram-dbae6.firebaseapp.com\",\n        databaseURL: \"https://instagram-dbae6-default-rtdb.firebaseio.com\",\n        projectId: \"instagram-dbae6\",\n        storageBucket: \"instagram-dbae6.appspot.com\",\n        messagingSenderId: \"336202175541\",\n        appId: \"1:336202175541:web:dcd68d7ca57b0ff7920d7c\",\n        measurementId: \"G-ZWZX6DD9FR\"\n\n    \n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport {db, auth, storage};\n","/home/ksyp/Documents/GitHub/instagram-clone/src/ImageUpload.jsx",[],["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":22,"nodeType":"45","messageId":"46","endLine":7,"endColumn":32},{"ruleId":"43","severity":1,"message":"47","line":111,"column":9,"nodeType":"45","messageId":"46","endLine":111,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":17,"column":13,"nodeType":"50","endLine":17,"endColumn":54},{"ruleId":"43","severity":1,"message":"51","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":13},{"ruleId":"39","replacedBy":"52"},{"ruleId":"41","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'modalStyle' is defined but never used.","Identifier","unusedVar","'signIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.",["54"],["55"],"no-global-assign","no-unsafe-negation"]